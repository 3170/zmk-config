/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#include "../zmk-nodefree-config/helper.h">"
#include "../zmk-nodefree-config/keypos_def/keypos_58keys.h"
#include "../zmk-nodefree-config/international_chars/german.dtsi"

// homerow mods
ZMK_BEHAVIOR(hrm, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <125>;
    global-quick-tap;
    bindings = <&kp>, <&kp>;
)

// tap: sticky shift | double tap: capsword
ZMK_BEHAVIOR(ss_cw, tap_dance,
    tapping-term-ms = <200>;
    bindings = <&sk LSHFT>, <&caps_word>;
)

// tap: backspace | shift + tap: delete | hold: num layer
ZMK_BEHAVIOR(bs_del_num, mod_morph,
    bindings = <&lt NUM BSPC>, <&kp DEL>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
)

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
        &kp ESC  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5                           &kp N6    &kp N7         &kp N8    &kp N9    &kp N0  &kp BACKSPACE
        &kp TAB   &kp Q      &kp W     &kp E     &kp R      &kp T                            &kp Z     &kp U          &kp I     &kp O     &kp P          &kp A
 &kp LEFT_SHIFT   &kp A      &kp S     &kp D     &kp F      &kp G                            &kp H     &kp J          &kp K     &kp L    &de_oe         &de_ae
          &mo 1   &kp Y      &kp X     &kp C     &kp V      &kp B                            &kp N     &kp M      &kp COMMA   &kp DOT  &kp FSLH          &mo 2
                         &kp LCTRL  &kp LALT  &kp LGUI  &kp SPACE  &kp ENTER  &kp ENTER  &kp SPACE  &kp RCMD  &kp SEPARATOR  &kp RGUI
            >;
        };

        lower_layer {
            bindings = <
        &kp ESC  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5                           &kp N6    &kp N7         &kp N8    &kp N9    &kp N0  &kp BACKSPACE
        &kp TAB   &kp Q      &kp W     &kp E     &kp R      &kp T                            &kp Z     &kp U          &kp I     &kp O     &kp P          &kp X
 &kp LEFT_SHIFT   &kp A      &kp S     &kp D     &kp F      &kp G                            &kp H     &kp J          &kp K     &kp L     &kp X          &kp X
          &mo 1   &kp Y      &kp X     &kp C     &kp V      &kp B                            &kp N     &kp M      &kp COMMA   &kp DOT  &kp FSLH          &mo 2
                         &kp LCTRL  &kp LALT  &kp LGUI  &kp SPACE  &kp ENTER  &kp ENTER  &kp SPACE  &kp RCMD  &kp SEPARATOR  &kp RGUI
            >;
        };

        raise_layer {
            bindings = <
        &kp ESC  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5                           &kp N6    &kp N7         &kp N8    &kp N9    &kp N0  &kp BACKSPACE
        &kp TAB   &kp Q      &kp W     &kp E     &kp R      &kp T                            &kp Z     &kp U          &kp I     &kp O     &kp P          &kp X
 &kp LEFT_SHIFT   &kp A      &kp S     &kp D     &kp F      &kp G                            &kp H     &kp J          &kp K     &kp L     &kp X          &kp X
          &mo 1   &kp Y      &kp X     &kp C     &kp V      &kp B                            &kp N     &kp M      &kp COMMA   &kp DOT  &kp FSLH          &mo 2
                         &kp LCTRL  &kp LALT  &kp LGUI  &kp SPACE  &kp ENTER  &kp ENTER  &kp SPACE  &kp RCMD  &kp SEPARATOR  &kp RGUI
            >;
        };

        Layer__3 {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                 &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
